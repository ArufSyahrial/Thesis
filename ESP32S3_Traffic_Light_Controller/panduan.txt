PANDUAN MENJALANKAN PROYEK ESP32-S3 TRAFFIC LIGHT CONTROLLER
============================================================

UNTUK KLIEN: CARA MENJALANKAN SISTEM LENGKAP

STEP 1: PERSIAPAN AWAL
-----------------------

1. Download semua file project yang telah diberikan:
   - Folder ESP32S3_Traffic_Light_Controller
   - File model (my_model.h5, Extracted_features.pkl)
   - File notebook (.ipynb) jika ada

2. Pastikan software berikut sudah terinstall di komputer:
   - Python 3.8 atau lebih tinggi
   - Visual Studio Code dengan ekstensi PlatformIO
   - Atau Arduino IDE jika prefer

STEP 2: SETUP DIREKTORI PROJECT
-------------------------------

1. Buat folder project utama:
   C:\Users\[NamaUser]\Documents\ESP32_TrafficLight\

2. Salin semua file ke struktur berikut:
   ESP32_TrafficLight/
   â”œâ”€â”€ notebooks/
   â”‚   â””â”€â”€ Ambulance Siren and Traffic Noise Audio Classification.ipynb
   â”œâ”€â”€ data/
   â”‚   â””â”€â”€ Extracted_features.pkl
   â”œâ”€â”€ models/
   â”‚   â””â”€â”€ my_model.h5
   â”œâ”€â”€ src/
   â”‚   â””â”€â”€ ESP32S3_Traffic_Light_Controller.ino
   â”œâ”€â”€ scripts/
   â”‚   â”œâ”€â”€ model_validation.py
   â”‚   â”œâ”€â”€ feature_extraction.py
   â”‚   â””â”€â”€ data_analysis.py
   â””â”€â”€ platformio.ini

STEP 3: INSTALASI PYTHON DAN DEPENDENCIES
----------------------------------------

1. Buka Command Prompt/Terminal
2. Jalankan perintah berikut:

pip install tensorflow scikit-learn librosa numpy matplotlib

Atau jika menggunakan Python 3:
pip3 install tensorflow scikit-learn librosa numpy matplotlib

STEP 4: VALIDASI MODEL DAN DATA
------------------------------

1. Buka Command Prompt
2. Masuk ke folder project:
   cd C:\Users\[NamaUser]\Documents\ESP32_TrafficLight

3. Jalankan validasi model:
   python scripts/model_validation.py

4. Jika berhasil, akan muncul output:
   âœ… Model loaded successfully
   âœ… Test Accuracy: 100.00%

STEP 5: KONVERSI MODEL UNTUK ESP32
----------------------------------

1. Jalankan script konversi:
   python models/model_conversion_scripts/convert_to_tflite.py

2. Kemudian konversi ke C array:
   python models/model_conversion_scripts/convert_to_c_array.py

3. File hasil: include/model_ambulance_siren.h akan terbentuk

STEP 6: SETUP HARDWARE
----------------------

Komponen yang Diperlukan:
- ESP32-S3 Board
- Modul Mikrofon INMP441
- LED Merah, Kuning, Hijau (3 buah)
- Resistor 220Î© (3 buah)
- Breadboard dan kabel jumper

Wiring Connection:

ESP32-S3 â†’ INMP441
------------------
3.3V     â†’ VDD
GND      â†’ GND
GPIO8    â†’ SCK
GPIO9    â†’ WS  
GPIO10   â†’ SD
GND      â†’ L/R

ESP32-S3 â†’ LED Traffic Light
---------------------------
GPIO4    â†’ LED Merah (+ resistor)
GPIO5    â†’ LED Kuning (+ resistor)
GPIO6    â†’ LED Hijau (+ resistor)
GND      â†’ Common ground

STEP 7: UPLOAD CODE KE ESP32-S3
-------------------------------

Opsi A: Menggunakan PlatformIO (Recommended)

1. Buka Visual Studio Code
2. Buka folder project: ESP32_TrafficLight
3. PlatformIO akan otomatis detect project
4. Klik icon "PlatformIO" di sidebar kiri
5. Pilih "Project Tasks" â†’ "esp32-s3-dev" â†’ "General" â†’ "Upload"
6. Tunggu sampai upload selesai

Opsi B: Menggunakan Arduino IDE

1. Buka Arduino IDE
2. Buka file: src/ESP32S3_Traffic_Light_Controller.ino
3. Pilih Board: "ESP32-S3 Dev Module"
4. Pilih Port yang tepat
5. Klik "Upload"

STEP 8: TESTING SISTEM
----------------------

1. Buka Serial Monitor (115200 baud)
2. Amati output serial:

âœ… System initialized - RED Light Active
ðŸŽ¤ Monitoring for ambulance sirens...

3. Test dengan suara ambulans:
   - Putar audio sirine ambulans di dekat mikrofon
   - Amati LED berubah menjadi HIJAU
   - Serial akan menampilkan: "ðŸš¨ EMERGENCY: AMBULANCE DETECTED!"

4. Test siklus normal:
   - Lampu akan berganti: MERAH â†’ HIJAU â†’ KUNING â†’ (repeat)

STEP 9: TROUBLESHOOTING UMUM
----------------------------

Problem: Microphone tidak terdeteksi
Solusi:
- Check koneksi kabel I2S
- Pastikan INMP441 dapat 3.3V
- Test dengan function testMicrophone() di kode

Problem: LED tidak menyala
Solusi:
- Check resistor 220Î© terpasang
- Verify GPIO pins (4,5,6)
- Test LED dengan power langsung

Problem: Model tidak loading
Solusi:
- Pastikan file model_ambulance_siren.h ada di folder include/
- Check size model tidak terlalu besar
- Verify TensorFlow Lite library terinstall

Problem: Detection tidak akurat
Solusi:
- Adjust confidence threshold di kode (variabel confidence_threshold)
- Pastikan lingkungan tidak terlalu bising
- Verify kualitas audio input

STEP 10: MONITORING DAN LOGGING
-------------------------------

1. Serial Monitor akan menampilkan:
   - Status traffic light
   - Confidence score deteksi
   - Performance metrics
   - Error messages jika ada

2. Performance metrics termasuk:
   - Inference time
   - Memory usage
   - Detection accuracy

STEP 11: KUSTOMISASI (OPSIONAL)
------------------------------

Ubah Timing Traffic Light:
Edit variabel di kode:
const unsigned long NORMAL_CYCLE_TIME = 10000;  // 10 detik
const unsigned long EMERGENCY_TIME = 15000;     // 15 detik

Adjust Sensitivity:
Ubah confidence threshold:
float confidence_threshold = 0.8f;  // 80% confidence

Tambah Fitur:
- Buzzer untuk audio alert
- WiFi untuk remote monitoring
- SD card untuk data logging

CATATAN PENTING UNTUK KLIEN
---------------------------

1. Safety First: System ini untuk prototipe, belum untuk production
2. Power Supply: Gunakan power supply stabil untuk ESP32
3. Environment: Tempatkan di lingkungan dengan noise minimal
4. Testing: Test dengan berbagai kondisi sebelum deploy
5. Maintenance: Regular check koneksi dan komponen

SUPPORT DAN KONTAK
------------------

Jika mengalami masalah:
1. Check error message di Serial Monitor
2. Verify semua koneksi hardware
3. Pastikan software dependencies terinstall
4. Hubungi technical support jika perlu

Dengan mengikuti step-step di atas, sistem akan berjalan dengan baik dan siap digunakan!

-- End of Guide --